// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 사용자 모델
model User {
  id             String          @id @default(uuid())
  email          String          @unique
  name           String
  password       String
  role           UserRole        @default(USER)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  apiProviders   ApiProvider[]
  apiUsageLogs   ApiUsageLog[]
  rateLimitRules RateLimitRule[]
}

enum UserRole {
  ADMIN
  USER
}

// API 제공자 모델
model ApiProvider {
  id             String         @id @default(uuid())
  name           String
  providerType   ProviderType
  apiKey         String
  isActive       Boolean        @default(true)
  baseUrl        String?
  modelSettings  Json?
  user           User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  apiUsageLogs   ApiUsageLog[]
  defaultModelId String?

  @@unique([userId, providerType])
}

enum ProviderType {
  OPENAI
  ANTHROPIC
  GOOGLE
}

// AI 모델 설정
model AiModel {
  id          String      @id @default(uuid())
  name        String
  providerType ProviderType
  description String?
  maxTokens   Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  apiUsageLogs ApiUsageLog[]
}

// API 사용 로그
model ApiUsageLog {
  id           String       @id @default(uuid())
  user         User         @relation(fields: [userId], references: [id])
  userId       String
  provider     ApiProvider  @relation(fields: [providerId], references: [id])
  providerId   String
  model        AiModel      @relation(fields: [modelId], references: [id])
  modelId      String
  requestType  String
  prompt       String
  response     String
  tokensUsed   Int
  status       String
  errorMessage String?
  latency      Int
  timestamp    DateTime     @default(now())
  metadata     Json?
  cost         Float?
}

// 요율 제한 규칙
model RateLimitRule {
  id        String     @id @default(uuid())
  user      User       @relation(fields: [userId], references: [id])
  userId    String
  limit     Int
  window    Int        // 시간 (초)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

// 시스템 설정
model SystemSetting {
  id        String    @id @default(uuid())
  key       String    @unique
  value     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
